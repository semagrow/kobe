#!/bin/sh

COMMAND=$1

case $COMMAND in

  ##############################################################################
  
  "apply")
  
    USAGE="usage: kobectl apply [configuration_file]"
    CONF_FILE=$2
    
    if [ -e $CONF_FILE ]
    then
      echo $USAGE
      exit
    fi
    
    kubectl apply -f $CONF_FILE
    
    ;;
    
  ##############################################################################
    
  "get")
  
    USAGE="usage: kobectl get [resource_type]"
    TYPE=$2
    FLAGS="-o custom-columns=NAME:.metadata.name"
    
    if [ -e $TYPE ]
    then
      echo $USAGE
      exit
    fi
    
    case $TYPE in
      "benchmark" | "benchmarks")
        kubectl $FLAGS get benchmarks.kobe.semagrow.org
        ;;
      "experiment" | "experiments")
        kubectl $FLAGS get experiments.kobe.semagrow.org
        ;;
      "federatortemplate" | "federatortemplates")
        kubectl $FLAGS get federatortemplates.kobe.semagrow.org
        ;;
      "datasettemplate" | "datasettemplates")
        kubectl $FLAGS get datasettemplates.kobe.semagrow.org
        ;;
      *)
        echo $USAGE
        ;;
    esac
    
    ;;
  
  ##############################################################################
  
  "delete")
    
    USAGE="usage: kobectl delete [resource_type] [resource]"
    TYPE=$2
    RESOURCE=$3
    
    if [ -e $TYPE ] || [ -e $RESOURCE ]
    then
      echo $USAGE
      exit
    fi
    
    case $TYPE in
      "benchmark" | "benchmarks")
        kubectl delete benchmarks.kobe.semagrow.org $RESOURCE
        ;;
      "experiment" | "experiments")
        kubectl delete experiments.kobe.semagrow.org $RESOURCE
        ;;
      "federatortemplate" | "federatortemplates")
        kubectl delete federatortemplates.kobe.semagrow.org $RESOURCE
        ;;
      "datasettemplate" | "datasettemplates")
        kubectl delete datasettemplates.kobe.semagrow.org $RESOURCE
        ;;
      *)
        echo $USAGE
        exit
        ;;
    esac
    
    ;;
  
  ##############################################################################
  
  "show")
    
    USAGE="usage: kobectl show [resource_type] [resource]"
    TYPE=$2
    RESOURCE=$3
    
    if [ -e $TYPE ] || [ -e $RESOURCE ]
    then
      echo $USAGE
      exit
    fi
    
    case $TYPE in
      "benchmark" | "benchmarks")
      
        DATASETS=`kubectl get benchmarks.kobe.semagrow.org $RESOURCE \
                          -o jsonpath="{.spec.datasets[*].name}"`
        
        OUTPUT="NAME STATUS\n"
        
        for DATASET in $DATASETS
        do
          STATUS=`kubectl get pod $DATASET-pod -n $RESOURCE \
                          -o custom-columns=:.status.phase --no-headers`
          
          if [ $STATUS = "Running" ]
          then
            LOADED_S=`kubectl logs $DATASET-pod -n $RESOURCE -c maincontainer \
                      | grep "Data stored successfully!"`
            LOADED_V=`kubectl logs $DATASET-pod -n $RESOURCE -c maincontainer \
                      | grep "Server online at 1111"`
            LOADED_P=`kubectl logs $DATASET-pod -n $RESOURCE -c maincontainer \
                      | grep "database system is ready to accept connections" \
                      | wc -l | grep 2`
            
            if [ -e "$LOADED_S$LOADED_V$LOADED_P" ] 
            then
              echo STATUS = "Loading"
            fi
          fi
          
          OUTPUT="$OUTPUT$DATASET $STATUS\n"
        done
        
        echo -n $OUTPUT | column -t
        
        ;;
      
      "experiment" | "experiments")
        
        NAMESPACE=`kubectl get experiments.kobe.semagrow.org $RESOURCE \
                           -o jsonpath="{.spec.benchmark}"`
        FEDERATOR=`kubectl get experiments.kobe.semagrow.org $RESOURCE \
                           -o jsonpath="{.spec.federatorName}"`
        FEDSTATUS=`kubectl get pod $FEDERATOR -n $NAMESPACE \
                           -o custom-columns=:.status.phase --no-headers`
        
        JOBS=`kubectl get pods --no-headers \
                      -o custom-columns=:.metadata.name,:.status.phase \
              | grep $RESOURCE-evaluationjob`
        
        OUTPUT="NAME STATUS\n$FEDERATOR $FEDSTATUS\n$JOBS\n"
        echo -n $OUTPUT | column -t        
        ;;
      
      "federatortemplate" | "federatortemplates")
        echo "Invalid resource type. Use the get command."
        ;;
      "datasettemplate" | "datasettemplates")
        echo "Invalid resource type. Use the get command."
        ;;
      *)
        echo $USAGE
        ;;
    esac
    
    ;;
  
  ##############################################################################
  
  *)
    echo "kobectl controls the KOBE open benchmarking engine."
    echo ""
    echo "Commands:"
    echo "  apply   apply a resource using a .yaml configuration file"
    echo "  get     display all resources of specific type"
    echo "  show    show the state of a benchmark or an experiment"
    echo "  delete  delete a resource of specific  type"
    echo "  help    print this message"
    echo ""
    echo "Usage:"
    echo "  kobectl apply [configuration_file]"
    echo "  kobectl get [resource_type]"
    echo "  kobectl show [resource_type] [resource]"
    echo "  kobectl delete [resource_type] [resource]"
    echo ""
    echo "[resource_type] can be any of:"
    echo "  benchmark(s),"
    echo "  experiment(s),"
    echo "  federatortemplate(s),"
    echo "  datasettemplate(s)."
    echo ""
    echo "for more advanced control options for KOBE, use kubectl."
    ;;
    
  ##############################################################################
    
esac
